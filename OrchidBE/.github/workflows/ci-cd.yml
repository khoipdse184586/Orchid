name: Orchid Service CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Run Tests
        run: mvn -B test

      - name: Code Quality Analysis
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=orchid-service -Dsonar.host.url=${{ secrets.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build Docker image
        run: docker build -t orchid-service:${{ github.sha }} .

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag orchid-service:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/orchid-service:latest
          docker tag orchid-service:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/orchid-service:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/orchid-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/orchid-service:${{ github.sha }}

      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploying to development environment..."
          # Add deployment commands here

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production environment..."
          # Add deployment commands here