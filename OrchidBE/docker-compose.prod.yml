version: '3.8'

services:
  # SQL Server Database với giới hạn tài nguyên cao hơn
  sqlserver:
    environment:
      MSSQL_PID: Developer
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # MinIO với cấu hình distributed
  minio:
    command: server /data1 /data2 /data3 /data4 --console-address ":9001"
    volumes:
      - minio-data1:/data1
      - minio-data2:/data2
      - minio-data3:/data3
      - minio-data4:/data4
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # Spring Boot Application với SSL
  orchid-service:
    ports:
      - "443:8443"
      - "8080:8080"
    environment:
      # Cấu hình Production
      SPRING_PROFILES_ACTIVE: prod

      # Cấu hình SSL
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY_STORE: /app/keystore.p12
      SERVER_SSL_KEY_STORE_PASSWORD: ${SSL_KEYSTORE_PASSWORD}
      SERVER_SSL_KEY_STORE_TYPE: PKCS12
      SERVER_PORT: 8443

      # Cấu hình tối ưu hóa
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: 50
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: "true"

      # Bật Redis cache
      SPRING_CACHE_TYPE: redis
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    volumes:
      - ./ssl:/app/ssl
      - ./logs:/app/logs
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - backend-orchid
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - backend-orchid
    depends_on:
      - orchid-service
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  minio-data1:
  minio-data2:
  minio-data3:
  minio-data4:
  redis-data: